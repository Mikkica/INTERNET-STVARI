// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Forecast.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  public static partial class ForecastS
  {
    static readonly string __ServiceName = "forecast.ForecastS";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.ForecastId> __Marshaller_forecast_ForecastId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.ForecastId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.ValueMessage> __Marshaller_forecast_ValueMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.ValueMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.ForecastValue> __Marshaller_forecast_ForecastValue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.ForecastValue.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.ForecastAggregationRequest> __Marshaller_forecast_ForecastAggregationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.ForecastAggregationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.AggregationValue> __Marshaller_forecast_AggregationValue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.AggregationValue.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage> __Method_GetForecastValueById = new grpc::Method<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetForecastValueById",
        __Marshaller_forecast_ForecastId,
        __Marshaller_forecast_ValueMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage> __Method_AddForecastValue = new grpc::Method<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddForecastValue",
        __Marshaller_forecast_ForecastValue,
        __Marshaller_forecast_ValueMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage> __Method_DeleteForecastById = new grpc::Method<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteForecastById",
        __Marshaller_forecast_ForecastId,
        __Marshaller_forecast_ValueMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage> __Method_UpdateForecastById = new grpc::Method<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateForecastById",
        __Marshaller_forecast_ForecastValue,
        __Marshaller_forecast_ValueMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.ForecastAggregationRequest, global::GrpcServer.AggregationValue> __Method_ForecastAggregation = new grpc::Method<global::GrpcServer.ForecastAggregationRequest, global::GrpcServer.AggregationValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ForecastAggregation",
        __Marshaller_forecast_ForecastAggregationRequest,
        __Marshaller_forecast_AggregationValue);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.ForecastReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ForecastS</summary>
    [grpc::BindServiceMethod(typeof(ForecastS), "BindService")]
    public abstract partial class ForecastSBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.ValueMessage> GetForecastValueById(global::GrpcServer.ForecastId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.ValueMessage> AddForecastValue(global::GrpcServer.ForecastValue request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.ValueMessage> DeleteForecastById(global::GrpcServer.ForecastId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.ValueMessage> UpdateForecastById(global::GrpcServer.ForecastValue request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.AggregationValue> ForecastAggregation(global::GrpcServer.ForecastAggregationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ForecastSBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetForecastValueById, serviceImpl.GetForecastValueById)
          .AddMethod(__Method_AddForecastValue, serviceImpl.AddForecastValue)
          .AddMethod(__Method_DeleteForecastById, serviceImpl.DeleteForecastById)
          .AddMethod(__Method_UpdateForecastById, serviceImpl.UpdateForecastById)
          .AddMethod(__Method_ForecastAggregation, serviceImpl.ForecastAggregation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ForecastSBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetForecastValueById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage>(serviceImpl.GetForecastValueById));
      serviceBinder.AddMethod(__Method_AddForecastValue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage>(serviceImpl.AddForecastValue));
      serviceBinder.AddMethod(__Method_DeleteForecastById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ForecastId, global::GrpcServer.ValueMessage>(serviceImpl.DeleteForecastById));
      serviceBinder.AddMethod(__Method_UpdateForecastById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ForecastValue, global::GrpcServer.ValueMessage>(serviceImpl.UpdateForecastById));
      serviceBinder.AddMethod(__Method_ForecastAggregation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ForecastAggregationRequest, global::GrpcServer.AggregationValue>(serviceImpl.ForecastAggregation));
    }

  }
}
#endregion
